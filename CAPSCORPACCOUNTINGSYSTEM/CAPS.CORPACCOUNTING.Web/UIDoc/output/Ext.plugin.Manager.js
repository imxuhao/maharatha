Ext.data.JsonP.Ext_plugin_Manager({"tagname":"class","name":"Ext.plugin.Manager","autodetected":{"aliases":true,"alternateClassNames":true,"extends":true,"mixins":true,"requires":true,"uses":true,"members":true,"code_type":true,"singleton":true},"files":[{"filename":"Manager.js","href":"Manager4.html#Ext-plugin-Manager"}],"private":true,"aliases":{},"alternateClassNames":["Ext.PluginManager","Ext.PluginMgr"],"extends":"Ext.Base","mixins":[],"requires":[],"uses":[],"members":[{"name":"typeName","tagname":"property","owner":"Ext.plugin.Manager","id":"property-typeName","meta":{"private":true}},{"name":"create","tagname":"method","owner":"Ext.plugin.Manager","id":"method-create","meta":{}}],"code_type":"ext_define","singleton":true,"id":"class-Ext.plugin.Manager","short_doc":"Creates plugin instances. ...","component":false,"superclasses":["Ext.Base"],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Alternate names</h4><div class='alternate-class-name'>Ext.PluginManager</div><div class='alternate-class-name'>Ext.PluginMgr</div><h4>Hierarchy</h4><div class='subclass first-child'>Ext.Base<div class='subclass '><strong>Ext.plugin.Manager</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/Manager4.html#Ext-plugin-Manager' target='_blank'>Manager.js</a></div></pre><div class='doc-contents'><div class='rounded-box private-box'><p><strong>NOTE:</strong> This is a private utility class for internal use by the framework. Don't rely on its existence.</p></div><p>Creates plugin instances.</p>\n\n<p>A plugin may be specified simply as a <em>config object</em> as long as the correct <code>ptype</code> is specified:</p>\n\n<pre><code>{\n    ptype: 'gridviewdragdrop',\n    dragText: 'Drag and drop to reorganize'\n}\n</code></pre>\n\n<p>Or just use the ptype on its own:</p>\n\n<pre><code>'gridviewdragdrop'\n</code></pre>\n\n<p>Alternatively you can instantiate the plugin with Ext.create:</p>\n\n<pre><code>Ext.create('<a href=\"#!/api/Ext.grid.plugin.DragDrop\" rel=\"Ext.grid.plugin.DragDrop\" class=\"docClass\">Ext.grid.plugin.DragDrop</a>', {\n    dragText: 'Drag and drop to reorganize'\n})\n</code></pre>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-typeName' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.plugin.Manager'>Ext.plugin.Manager</span><br/><a href='source/Manager4.html#Ext-plugin-Manager-property-typeName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.plugin.Manager-property-typeName' class='name expandable'>typeName</a> : String<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&#39;ptype&#39;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-create' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.plugin.Manager'>Ext.plugin.Manager</span><br/><a href='source/Manager4.html#Ext-plugin-Manager-method-create' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.plugin.Manager-method-create' class='name expandable'>create</a>( <span class='pre'>config, [defaultType]</span> ) : <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Creates a new Plugin from the specified config object using the config object's ptype to determine the class to\ninsta...</div><div class='long'><p>Creates a new Plugin from the specified config object using the config object's ptype to determine the class to\ninstantiate.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : Object<div class='sub-desc'><p>A configuration object for the Plugin you wish to create.</p>\n</div></li><li><span class='pre'>defaultType</span> : Function (optional)<div class='sub-desc'><p>The constructor to provide the default Plugin type if the config object does not\ncontain a <code>ptype</code>. (Optional if the config contains a <code>ptype</code>).</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></span><div class='sub-desc'><p>The newly instantiated Plugin.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{"private":true}});